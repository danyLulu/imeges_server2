services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - images:/app/images # Монтируем volume для изображений
      - logs:/app/logs     # Монтируем volume для логов
      - ./backups:/app/backups # Локальная папка для резервных копий внутри контейнера
    environment:
      - DB_NAME=images_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    restart: always # Автоматический перезапуск при сбое

  nginx:
    image: nginx:latest # Используем официальный образ Nginx
    ports:
      - "8080:80" # Nginx будет доступен на порту 8080 хост-машины
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Монтируем наш nginx.conf
      - images:/app/images:ro # Монтируем volume с изображениями в Nginx (только для чтения)
      - ./static:/app/static:ro # Монтируем статические файлы для Nginx (только для чтения)
    depends_on:
      app:
        condition: service_started # Ждем старта app (сам app уже ждёт здоровую БД)
    restart: always

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: images_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d images_db"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  images: # Определяем volume для изображений
  logs:   # Определяем volume для логов
  db_data: # Данные PostgreSQL